# global !p
# def junit(snip):
# 	if snip.opt("g:ultisnips_java_junit", "") == "3":
# 		snip += ""
# 	else:
# 		snip.rv += "@Test\n\t"

# def nl(snip):
# 	if snip.opt("g:ultisnips_java_brace_style", "") == "nl":
# 		snip += ""
# 	else:
# 		snip.rv += " "
# def getArgs(group):
# 	import re
# 	word = re.compile('[a-zA-Z><.]+ \w+')
# 	return [i.split(" ") for i in word.findall(group) ]

# def camel(word):
# 	if not word: return ''
# 	return word[0].upper() + word[1:]

# def mixedCase(word):
# 	if not word: return ''
# 	return word[0].lower() + word[1:]

# endglobal

# main

snippet main "main" b
public static void main(String[] args) {
	$0
}
endsnippet

# input - output

snippet sout "print" b
System.out.print($1);$0
endsnippet

snippet soutln "println" b
System.out.println($1);$0
endsnippet

# access modifyers

snippet st
static $0
endsnippet

priority 10
snippet "\.([pdt]?)(s?)(f?)([ibBSlCsfdvco]?)" "type acronims" br
`!p
result = ''
if match.group(1) == 'p':
	result = 'public '
elif match.group(1) == 'd':
	result = 'protected '
elif match.group(1) == 't':
	result = 'private '

if match.group(2) == 's':
	result += 'static '

if match.group(3) == 'f':
	result += 'final '

if match.group(4) == 'i':
	result += 'int '
elif match.group(4) == 'b':
	result += 'boolean '
elif match.group(4) == 'B':
	result += 'byte '
elif match.group(4) == 'S':
	result += 'short '
elif match.group(4) == 'l':
	result += 'long '
elif match.group(4) == 'C':
	result += 'char '
elif match.group(4) == 's':
	result += 'String '
elif match.group(4) == 'f':
	result += 'float '
elif match.group(4) == 'd':
	result += 'double '
elif match.group(4) == 'v':
	result += 'void '
elif match.group(4) == 'c':
	result += 'class '
elif match.group(4) == 'o':
	result += 'Object '
snip.rv = result
`
endsnippet

# control expressions

priority 100
snippet for "for loop" b
for ($1) {
	$2
}$0
endsnippet

snippet fori "for loop" b
for (int $1 = 0; $1 < $2; ++$1) {
	$3
}$0
endsnippet

snippet if "if statement" b
if ($1) {
	$2
}$0
endsnippet

snippet ifn "if statement" b
if ($1 == null) {
	$2
}$0
endsnippet

snippet whl "while cycle" b
while ($1) {
	$2
}$0
endsnippet

snippet dwhl "do while cycle" b
do {
	$2
} while ($1);$0
endsnippet

snippet else "else statement"
else {
	$1
}$0
endsnippet

snippet elif "else if statement"
else if ($1) {
	$2
}$0
endsnippet

snippet ret "return" b
return`!p if t[1] and t[1][0] != ';' and t[1][0] != ' ':
	snip.rv = ' '
else:
	snip.rv = ''`$1
endsnippet

snippet cont "continue" b
continue;
endsnippet

# classes

snippet pcls "class" b
public class $1 {
	public $1($2) {
		$3
	}
	$0
}
endsnippet

snippet scls "class" b
static class $1 {
	public $1($2) {
		$3
	}
	$0
}
endsnippet
